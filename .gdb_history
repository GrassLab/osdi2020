p *($sp - 88)
p ($sp - 88)
/ ($sp - 88)
x/ ($sp - 88)
x/1i ($sp - 88)
x/1h ($sp - 88)
x/1h ($sp - 0x88)
x/1i ($sp + 0x88)
x/1i ($sp + 88)
si
p $x0
x/1i ($sp + 88)
b hh
c
si
p $x0
p x0
b hh
c
si
p x0
p $x0
si
p x0
p $x0
b hh
c
si
b hh
c
b hh
c
si
b hh
c
p x0
si
p $elr_el1
si
p $elr_el1
si
b hh
c
si
p x0
p elr_el1
p $elr_el1
set $elr_el1 = 0x3
p $elr_el1
b tt
c
si
p $x0
si
p $elr_el1
b tt
c
p $x1
x/10i $x1
si
b tt
c
si
p $x0
b tt
c
p utask->sp
p utask->func
si
p $x5
p $x6
p utask->func
p utask->sp
p $x2
si
p $x5
p $ps
p $pstate
p $pstate.sp
p $pstate_sp
p $pstate_s
p $pstate
p $pstatef
p $pstatd
p $pst
p $pstsdf
b tt
c
si
x/10i 0x85070
p $x6
b tt
c
si
p $x6
p $x1
p utask->func
b tt
c
p $x1
p $0x
p $x0
b tt
c
si
p $x1
b tt
c
p $x1
p utask
p (struct utask_t *)utask
p ((struct utask_t *)utask)
ptype ((struct utask_t *)utask)
p ((struct utask_t *)utask)
p ((struct utask_t *)utask)
utask->sp
utask
p utask->sp
si
p $x6
b tt
c
si
p $x0
p utask
p utask->sp
p sp
b tt
c
si
p sp
p func
p utask->sp
p utask->func
si
p x0
p $x0
si
p sp
p $sp
si
si
b el
c
p elr
si
p elr
x/10i elr
b sw
c
c
c
c
p nextfunc
si
p $x2
x/10i $x2
si
c
b switch_to
c
c
c
c
p $daifclr
si
p $daifclr
si
bt
b sw
c
c
si
p $x2
x/10i $x2
si
b sys
c
si
b fork
c
c
b for
c
si
b for
c
p task->utask.fork_id
p task_pool[i].utask.fork_id
p task_pool[i].id
si
b for
c
b for
c
si
p task->utask.fork_id
p task->id
b sys
c
p task->id
b sys2
c
p task->is
p task->id
p task->utask->fork_id
si
si
si
c
b sys2
c
si
b switch_to
c
c
c
si
p $x2
x/10i $x2
si
p task->id
si
p task->id
p task
p $x0
task
p task
si
b gg
c
b sys2
p task->sp
p &kstack_pool[task->id]
p (uint64_t)&kstack_pool[i]
p task->utask.sp
p &ustack_pool[task->id]
p ustack_pool[i]
p &ustack_pool[i]
b gg
c
kstack_pool[task->id]
p kstack_pool[task->id]
p &kstack_pool[task->id]
b sys
b sys
b sys2
c
c
c
b sys
b sys2w
b sys2
c
c
c
