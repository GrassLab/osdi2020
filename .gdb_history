c
p *((struct fentry*)file->vnode->internal)->buf->size
c
p *((struct fentry*)file->vnode->internal)->buf->size
p file->f_pos
p ((struct fentry*)file->vnode->internal)->buf->size
b fd
c
p ((struct fentry*)file->vnode->internal)->buf
p *((struct fentry*)file->vnode->internal)->buf
p ((struct fentry*)file->vnode->internal)->buf
p ((struct fentry*)file->vnode->internal)
p *((struct fentry*)file->vnode->internal)
p *((struct fentry*)file->vnode->internal)
p *((struct fentry*)file->vnode->internal)
p file
p *file
c
p file
p *file
p file->f_opse
p *file->f_ops
p *(struct fentry*)file->vnode->internal)
p *((struct fentry*)file->vnode->internal)
p *((struct fentry*)file->vnode->internal)
p file->vnode
p file->vnode->internal
b fd
c
p ((struct fentry*)file->vnode->internal)->buf->buffer
p ((struct fentry*)file->vnode->internal)->buf
p *((struct fentry*)file->vnode->internal)->buf
p *((struct fentry*)file->vnode->internal)
b fd
c
p ans
c
p ans
p buf
x/10s buf
c
b mai
c
p sz
p buf
b gg
c
p currentdir
p *currentdir
p *currentdir->internal
p *(struct fetnry*)currentdir->internal
p *(struct fentry*)currentdir->internal
b ji
c
p target
p *target
p **target
p **target->internal
p (struct fentry*)**target->internal
p *(struct fentry*)**target->internal
p *(struct fentry*)(**target->internal)
p *(struct fentry*)(**target)->internal
((struct fentry*)dir_node->internal)->parent
p ((struct fentry*)dir_node->internal)->parent
p *((struct fentry*)dir_node->internal)->parent
p *((struct fentry*)dir_node->internal)->parent->vnode
p *((struct fentry*)dir_node->internal)->parent->vnode
p ((struct fentry*)dir_node->internal)->parent
b fs
c
p mount->root
p *mount->root
p mount->root
p vnode
p *vnode
b cre
c
p currentdir->v_ops->lookup
p *currentdir
p *currentdit->internal
p *(struct fentry*)currentdir->internal
b op
c
c
p currentdir->v_ops
p currentdir
p *currentdir
b op
c
p currentdir->v_ops
p *currentdir->v_ops
p *currentdir
p currentdir
c
p currentdir
p *currentdir
b op
c
p *currentdir
p *currentdirc
c
p *currentdir
c
p *currentdir
b op
c
p *currentdir
c
p *currentdir
c
p *currentdir
c
b op
c
p *currentdir
b 74
c
p *currentdir
b 77
c
p *currentdir
si
p *currentdir
p *currentdir
p fd
p currentdir
sizeof
si
b fatfs_mount
c
b b
c
b fat
c
si
b fatf
c
si
b fat
c
b clus
b clu
c
p *fat_boot
ptype fat_BS
ptype fat_BS
ptype fat_boot
b clu
c
p *fat_root
x/100s fat_root
x/10s fat_root
b clu
c
x/100s fat_root
x/100s fat_root
b clu
c
x/100s fat_root
b clu
c
x/10i fat_root
b clu
c
x/10i fat_root
b clu
c
x/10i fat_root
x/100i fat_root
b clu
c
x/100i fat_root
b clu
c
x/100i fat_root
b clu
x/100i fat_root
x/100i fat_boot
x/100i fat_boot
c
x/100i fat_boot
p *fat_boot
p *fat_boot->root_cluster
p fat_boot->root_cluster
ptype fat_boot->root_cluster
ptype fat_boot
p &fat_boot->root_cluster
p *fat_boot
p &fat_boot->extended_flags
p &fat_boot->bytes_per_sector
p &fat_boot->table_size_32
p &fat_boot->sectors_per_track
p &fat_boot->bytes_per_sector
p &fat_boot->sectors_per_cluster
p &fat_boot->table_size_16
p &fat_boot->media_type
p &fat_boot->oem_name
p &fat_boot->bytes_per_sector
p fat_boot->oem_name
p fat_boot->bytes_per_sector
p &fat_boot->bytes_per_sector
b clu
c
p &fat_boot->bytes_per_sector
p &fat_boot->oem_name
b clu
c
p &fat_boot->
p &fat_boot->bytes_per_sector
p sizeof(struct fat_BS)
p sizeof(fat_boot)
p sizeof(*fat_boot)
p &fat_boot->bytes_per_sector
p fat_boot->bytes_per_sector
x/10i fat_boot
x/10s fat_boot
x/10i fat_boot
x/10h fat_boot
x/10x fat_boot
x/10g fat_boot
x/10b fat_boot
x/20b fat_boot
p fat_boot->bytes_per_sector
p fat_boot->oem_name
p fat_boot->oem_name[7]
b clu
c
p fat_boot->bytes_per_sector
p &fat_boot->bytes_per_sector
b clu
c
b clu
c
x/10s fat_root
x/100s fat_root
x/50s fat_root
b clu
c
b clu
c
x/50s fat_root
p first_sector_of_cluster
p root_cluster_32
p fat_boot->sectors_per_cluster
p *fat_boot->sectors_per_cluster
p *fat_boot
p &fat_boot->sectors_per_cluster
b cluc
b clu
c
p fat_boot->reserved_sector_count
p fat_boot->table_count
p fat_size
fat_boot->table_size_16
p fat_boot->table_size_16
p fat_boot->table_size_32
